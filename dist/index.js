'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&'function'==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?'symbol':typeof a},_createClass=function(){function a(b,c){for(var f,d=0;d<c.length;d++)f=c[d],f.enumerable=f.enumerable||!1,f.configurable=!0,'value'in f&&(f.writable=!0),Object.defineProperty(b,f.key,f)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}var path=require('path'),re=/\/?package.json$/,CopyPkgJsonPlugin=function(){function a(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;_classCallCheck(this,a),('object'!==('undefined'==typeof b?'undefined':_typeof(b))||Array.isArray(b))&&(b={}),this.options=b,this.context=c}return _createClass(a,[{key:'apply',value:function apply(b){var c,d=this.options,f=this.context,g=f?f.match(re)?path.resolve(f.replace(re,''),'package.json'):path.resolve(f,'package.json'):path.resolve(process.cwd(),'package.json');try{b.inputFileSystem._statSync(g),c=JSON.parse(JSON.stringify(require(g)))}catch(h){throw new Error(notFoundError(g),h)}b.plugin('emit',function(h,j){if(d.hasOwnProperty('remove')&&d.remove.forEach(function(k){if(/\./.test(k)){var n,l=k.split('.'),m=l.length-1;l.forEach(function(o,p){0===p?n=c[o]:p===m?delete n[o]:n=n[o]})}else delete c[k]}),d.hasOwnProperty('replace'))for(var k in d.replace)if('object'===_typeof(d.replace[k])&&c.hasOwnProperty(k))for(var l in d.replace[k])c[k][l]=d.replace[k][l];else c[k]=d.replace[k];h.assets['package.json']={source:function source(){return JSON.stringify(c,null,'\t')},size:function size(){return Object.keys(c).length}},j()})}}]),a}();function notFoundError(a){return' \x1B[41m\x1B[37mCannot find the following package.json path -- \x1B[0m \n \x1B[33m'+a+' \x1B[0m\n If your package.json is not in the root directory of the current node process\n - pass the path to where it is located as the second argument to plugin: \n   \x1B[36mnew CopyPkgJsonPlugin({options}, \'path/main\')\x1B[0m'}module.exports=CopyPkgJsonPlugin;